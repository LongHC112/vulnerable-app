pipeline {
    agent any

    environment {
        ZAP_DOCKER_IMAGE = 'ictu/zap2docker-weekly'
        TARGET_URL = 'http://192.168.23.156:6060/login'
        CONTEXT_FILE = 'Dast_Auth.context'
        AUTH_SCRIPT = 'Long'
        REPORT_FILE = 'authen_report.html'
    }
    
    stages {
        stage('Build Jobs') {
            steps {
                script {
                    // Kiểm tra xem tệp .jar có tồn tại không
                    sh "ls -l vulnapp-0.0.1-SNAPSHOT.jar"

                    // Thử khởi chạy ứng dụng và ghi log ra file
                    sh "nohup java -jar vulnapp-0.0.1-SNAPSHOT.jar --server.port=6060 > app.log 2>&1 &"

                    // Chờ để ứng dụng khởi động
                    sh "sleep 30s"

                    // Kiểm tra xem ứng dụng có chạy không bằng cách kiểm tra log
                    sh "cat app.log"
                }
            }
        }

        stage('Initialize Environment') {
            steps {
                script {
                    // Chờ thêm một chút để ứng dụng hoàn toàn khởi động
                    sh "sleep 30s"
                    
                    // Kiểm tra nếu server có thể truy cập được
                    script {
                        def serverReachable = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://192.168.23.135:6060/register", returnStatus: true)
                        if (serverReachable != 200) {
                            error("Server is not reachable at http://192.168.23.135:6060/register")
                        }
                    }

                    // Đăng ký người dùng
                    sh 'curl -X POST "http://192.168.23.135:6060/register" -d "email=Long" -d "password=Long" -d "fullName=Long"'

                    // Pull Docker image của ZAP
                    sh "docker pull ${ZAP_DOCKER_IMAGE}"
                }
            }
        }

        stage('Run ZAP Full Scan') {
            steps {
                script {
                    try {
                        // Chạy full scan ZAP trong Docker
                        sh """
                        docker run -v /home/kali/Desktop:/zap/wrk/:rw -t ${ZAP_DOCKER_IMAGE} \
                        zap-full-scan.py -t ${TARGET_URL} -r ${REPORT_FILE}
                        """
                    } catch (Exception e) {
                        // Xử lý ngoại lệ
                        echo "ZAP scan failed: ${e.message}"
                    }
                }
            }
        }

        stage('Find Path') {
            steps {
                script {
                    // In đường dẫn hiện tại
                    sh "pwd"
                }
            }
        }

        stage('Archive ZAP Report') {
            steps {
                script {
                    // Lưu báo cáo của ZAP vào Jenkins
                    archiveArtifacts artifacts: "${REPORT_FILE}", allowEmptyArchive: true
                }
            }
        }
    }

    post {
        always {
            // Dọn dẹp sau khi hoàn thành
            cleanWs()
        }
    }
}
